/*              Projeto em Grupo TURMA 13. MongoDB

                Eleazar Jesús Ramírez Noguera
                Darwin Jesus Guzman Betancourt
 */



use("dbFilmes")

use("dbFilmes")
db.createCollection("Filmes")

use("dbFilmes")
db.Filmes.insertMany
    ([        
          { 
           nome: "Duna", 
           diretor: "Denis Villeuneve", 
           elenco: ["Timothée Chalamet","Rebecca Ferguson", "Zendaya" ], 
           ano: "2021", 
           premios: 0
         },          
          {           
           nome: "Central do Brasil", 
           diretor: "Walter Salles", 
           elenco: ["Fernanda Montenegro", "Vinicius de Oliveira"], 
           ano: "1998", 
           premios: 20
        },
          { 
           nome: "Cidade dos Sonhos", 
           diretor: "David Lynch", 
           elenco: ["Naomi Watts", "Laura Elena Harring"], 
           ano: "2001", 
           premios: 18
         },
          {
           nome: "King Kong", 
           diretor: "Peter Jackson", 
           elenco: ["Naomi Watts", "Jack Black", "Adrien Brody"], 
           ano: "2005", 
           premios: 10
        },
          {
           nome: "Bela Vingança", 
           diretor: "Emerald Fennel", 
           elenco: ["Carey Mulligan", "Bo Burnham"], 
           ano: "2020", 
           premios: 22
        },
          {
           nome: "SDA: A Sociedadedo Anel", 
           diretor: "Peter Jackson", 
           elenco: ["Elijah Wood", "Ian McKellen", "Liv Tyler"], 
           ano: "2001", 
           premios: 15
        },
          {
           nome: "Shrek", 
           diretor: ["Andrew Adamson", "Vicky Jenson"], 
           elenco: ["Mike Myers", "Eddie Murphy", "Cameron Diaz"], 
           ano: "2001", 
           premios: 10
        },
          {
           nome: "Cidade de Deus", 
           diretor: ["Fernando Meirelles", "Kátia Luind"], 
           elenco: ["Alexandre Rodrigues", "Leandro Firmino da Hora"], 
           ano: "2002", 
           premios: 15
        },
          {
           nome: "Pânico", 
           diretor: "Wes Craven", 
           elenco: ["Neve Campbell", "Courtney Cox", "David Arquette"], 
           ano: "1996", 
           premios: 6
        }
    ])



// 2 - Busque filmes lançados entre 1997 e 2004.

use("dbFilmes")
db.Filmes.find({
    $and: [
        {
            $or: [{ ano: { $gte: "1997", $lte: "2004" } }],
        }
    ]
}).sort({ ano: 1 })

// 3 - Busque filmes de 2001 ou que comecem com a letra D.

use("dbFilmes")
db.Filmes.find({
    $or: [
        { ano: "2001"  },
        { nome:  {$regex:"^D" } }
    ]
})

// 4 - Busque filmes lançados dirigidos pelo Peter Jackson ou pelo Walter Salles usando $in.

use("dbFilmes")
db.Filmes.find({
    diretor:{
        $in: ["Peter Jackson", "Walter Salles"]
    }
})

//5 - Busque filmes lançados entre 2002 e 2021 e que contenham as atrizes Naomi Watts ou Carey Mulligan.

use("dbFilmes")
db.Filmes.find({
    ano: {
        $gte: "2002",
        $lte: "2021"
        },
      elenco: {
        $in: ["Naomi Watts", "Carey Mulligan"]}
})

// 6 - Busque todos os filmes que não sejam entre 2001 e 2005
use("dbFilmes")
db.Filmes.aggregate([
    {
        $group: {
            _id:"",
            "premios":{$sum:"$premios"}
        }
    }, {
        $project:{"Total de vitorias":("$premios")}
    }
]);
use("dbFilmes")
db.Filmes.find( { ano: { $not: { $gte: "2001", $lte: "2005" } } } )


//7 - Conte quantos filmes foram lançados em 2001.

use("dbFilmes")
db.Filmes.find({ano: {$in:["2001"]}}).count()


//8 - Selecione apenas o elenco numa distinct.

use("dbFilmes")
db.Filmes.distinct("elenco");


/* 9- Selecione os filmes lançados em 2001, apresentando seu nome e diretor apenas, em ordem decrescente,
limitando a dois resultados. */

use("dbFilmes")
db.Filmes.find(
{ano: {$eq: "2001" }},
{nome: 1,diretor: 1,_id:0}
).sort({nome:-1,diretor:-1 }).limit(2)

//Com limit de 3
use("dbFilmes")
db.Filmes.find(
{ano: {$eq: "2001" }},
{nome: 1,diretor: 1,_id:0}
).sort({nome:-1,diretor:-1 }).limit(3)



// 10- Crie uma index usando o ano como referência.

use("dbFilmes")
db.Filmes.createIndex( { ano : "text" } )

use("dbFilmes")
db.Filmes.getIndexes()



// 11 - Some os prêmios de todos os filmes.

use("dbFilmes")
db.Filmes.aggregate([
    {
        $group: {
            _id:"",
            "premios":{$sum:"$premios"}
        }
    }, {
        $project:{"Total de vitorias":("$premios")}
    }
]);

// 12 - Na coleção `sample_mflix` do Mongo Atlas DB, crie uma consulta que retorne os filmes com os seus comentários utilizando o estágio de agrupamento (e.g.: `$lookup`).

 use("sample_mflix")
db.comments.aggregate({
  $lookup: {
    from: 'movies',
    localField: 'movie_id',
    foreignField: '_id',
    as: '[C][O][M][E][N][T][A][R][I][O][S]'
  }
})

use("sample_mflix")
db.comments.find()